# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.29.2"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
    # increment_build_number

	#sigh
    #gym # Build your app - more options available
 
	# run the tests of your app
    	xctool :test,[
		'-workspace','tcc.xcworkspace',
		'-scheme','tcc',
		'-configuration','Debug',
		'-reporter','plain',
		'-sdk','iphonesimulator',
		'GCC_GENERATE_TEST_COVERAGE_FILES=YES',
		'GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=TES'
	].join(' ')

	lcov(
		project_name: 'tcc',
		scheme: 'tcc',
		output_dir:'coverage_reports'
	) 

  xctest(
    destination: "name=iPhone 6,OS=9.0"
  )

gcovr(
  html: true,
  html_details: true,
  output: "./coverage_reports/report.html"
)

  end

  desc "Runs all the tests"
  lane :test do
    # snapshot
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    snapshot
    sigh
    # deliver(beta: true)

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  desc "** Full Markdown** Support: `code`"
  lane :deploy do
    snapshot
    sigh
    # deliver(skip_deploy: true, force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: 
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
